apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 30080
  selector:
    app: keycloak
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 2
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:20.0.2
          args: ["start", "--cache-stack=kubernetes"]
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                {
                  secretKeyRef:
                    { name: keycloak-secret, key: KEYCLOAK_ADMIN_USERNAME },
                }

            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                {
                  secretKeyRef:
                    { name: keycloak-secret, key: KEYCLOAK_ADMIN_PASSWORD },
                }
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_METRICS_ENABLED
              value: "true"

            - name: KC_HOSTNAME_URL
              value: "http://192.168.122.22:31617"

            - name: KC_HOSTNAME_ADMIN_URL
              value: "http://192.168.122.22:31617"

            - name: KC_HTTP_ENABLED
              value: "true"

            - name: PROXY_ADDRESS_FORWARDING
              value: "true"

            - name: KC_PROXY
              value: "edge"
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL
              valueFrom:
                { secretKeyRef: { name: keycloak-secret, key: DB_URL } }

            - name: KC_DB_USERNAME
              valueFrom:
                { secretKeyRef: { name: keycloak-secret, key: DB_USERNAME } }

            - name: KC_DB_PASSWORD
              valueFrom:
                { secretKeyRef: { name: keycloak-secret, key: DB_PASSWORD } }

            - name: jgroups.dns.query
              value: keycloak
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "2Gi"
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 1
